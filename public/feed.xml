<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>Articles by Joseph Bales</title>
        <link>https://josephbales.com</link>
        <description>I'm just this guy that blogs every year or two.</description>
        <lastBuildDate>Tue, 08 Feb 2022 02:33:20 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Cleaning Up This Mess]]></title>
            <link>https://josephbales.com/blog/2020/10/18/cleaning-up-this-mess</link>
            <guid>https://josephbales.com/blog/2020/10/18/cleaning-up-this-mess</guid>
            <pubDate>Sun, 18 Oct 2020 05:00:00 GMT</pubDate>
            <description><![CDATA[### Part One

Oh wow, nearly another whole year has passed since my last blog post. If you are an infrequent visitor you may have noticed that I've simplified the design of the site quite a bit. For several years this blog has been sporting a [Bootstrap](https://getbootstrap.com/) based theme. While bootstrap themes make things easier (especially when using something like [Bootswatch](https://bootswatch.com/) hosted from a [CDN](https://en.wikipedia.org/wiki/Content_delivery_network)), it also adds a lot of overhead for what amounts to eye candy.  While eye candy has its place, that place isn't on the personal web site of a developer. I'm taking my inspiration from such famous developers as [Richard Stallman](http://stallman.org/) and [Donald Knuth](https://www-cs-faculty.stanford.edu/~knuth/).

While the argument could be made that these are a couple of old school developers who haven't bothered, either intentionally or unintentionally, to keep up with modern design concepts, I do not think that is a valid argument because of one thing, content is king. Content was originally what the web and the internet in general were all about. No one is really coming here to see what new theme I've picked or the 2 hours I spent making it look "just so." People come here to find out what I've being doing by reading about it in the content of these pages.

My real objective here was very simple. I wanted to have a web site that was extremely minimal when it came to styling and features and I wanted it to load so quickly that it would seem almost instantaneous. I would say that my goal has been accomplished. There are almost no images that load on this site. There are no fonts. There are no cookies or other forms of client side storage taking place. There are no CSS files that load from a CDN. Everything is hosted locally in static HTML and CSS files, and that's it.

You'll also notice that there is no javascript running on this site. I even removed the javascript that I was using to track visitors to this site via Google Analytics. I did this for two reasons. The first reason is that I noticed that my [Pi-hole](https://pi-hole.net/) blocks Google Analytics, thus making it unreliable considering a good number of people run ad and tracking blocking software. The second reason is that I think internet privacy is important and I don't want to track someone if they don't want to be tracked and honestly, I don't have any reason to track anyone.

### Part Two

The other thing I'm working on cleaning up is the United States. The year is 2020 and we have a [racist, bigoted, ignorant, misogynistic, authoritarian, man-child](https://en.wikipedia.org/wiki/Donald_Trump) running the country. He's dangerously close to getting a second term in office. We are two weeks out from election day and I'm still holding my breath, waiting for an "October Surprise" to drop on his main opponent, [Joe Biden](https://en.wikipedia.org/wiki/Joe_Biden). While Biden was not my first, second, third, or fourth choice to be President, he's the candidate we have that has the highest chance of beating Donald Trump, so he is who I will vote for. While many polls show Biden in the lead at this point, it's a very slim margin and some of the polling organizations like Rassmusen and Trafalgar that predicted Trump's 2016 win are showing Trump leading in several critical states. It's a toss up at this point.

Even if we successfully remove Trump from office, it's still not going to clean things up. We will have to hold whoever the next President is to a higher standard and work hard to get them to start making government work for the largest portion of people that it governs.
]]></description>
        </item>
        <item>
            <title><![CDATA[Two+ Years of Updates]]></title>
            <link>https://josephbales.com/blog/2019/12/05/two-years-of-updates</link>
            <guid>https://josephbales.com/blog/2019/12/05/two-years-of-updates</guid>
            <pubDate>Thu, 05 Dec 2019 06:00:00 GMT</pubDate>
            <description><![CDATA[Wow, time really flies when you're having fun. It's been over two years since my last update, so let's see how some of the things I've talked about in the past have evolved.. er.. intelligently designed?

* [Regarding career politicians in Tennessee]({% post_url 2013-04-21-primary-challengers-wanted %}), two out of three career politicians in Tennessee are still in office.
* [Regarding Mark Sanford]({% post_url 2013-05-10-sc-01-have-you-no-shame %}), turns out SC-01 **_does_** have some shame.. [5 years later](https://en.wikipedia.org/wiki/Mark_Sanford#2018).
* [Regarding the interwebs]({% post_url 2013-05-26-webs-dead-baby-part-1 %}) , it's still dead, despite this very blog post.
* [Regarding the Googles]({% post_url 2014-05-17-why-im-no-longer-a-google-fanboy %}), I waffle on the Google fanboy stuff. I wouldn't say I'm a fanboy of Google, but I still use Gmail and Docs. They're damn convenient.
* [Regarding Bootstrap]({% post_url 2014-12-08-the-purpose-of-twitter-bootstrap %}), if you're using [Angular](https://angular.io), do yourself a favor and use [Angular Material](https://material.angular.io) and skip bootstrap.
* [Regarding .NET Core 1.0]({% post_url 2017-01-13-NET-Core-1.0-Not-Ready-for-Primetime %}), .NET Core 2.1 and later are officially ready for primetime and getting better every day.

So what's new? I got divorced and now I am living by myself in a one bedroom apartment in Nashville, TN that costs twice what it did 10 years ago. Progress?
]]></description>
        </item>
        <item>
            <title><![CDATA[.NET Core 1.0 Not Ready for Primetime]]></title>
            <link>https://josephbales.com/blog/2017/01/13/net-core-1_0-not-ready-for-primetime</link>
            <guid>https://josephbales.com/blog/2017/01/13/net-core-1_0-not-ready-for-primetime</guid>
            <pubDate>Fri, 13 Jan 2017 06:00:00 GMT</pubDate>
            <description><![CDATA[
`<rant>`

Well, I just spent two hours of my life getting a project running that was already working on another PC. I'm so fed up right now that I don't really want to work on the actual project. It is an ASP.NET Core 1.0 project that I've been working on a few minutes at a time for the past couple of months. I've made so little progress that when I started running into trouble I thought about just creating a new project from scratch and copying over the files. But without a guarantee that the new project would work I decided that was not a very good solution.

It's actually been a few months since I've messed with the project. It builds and runs on my laptop, but I just built a new desktop computer and I have been doing most of my work on it, so I wanted to get the project going. I cloned it to the machine, restored the packages, and immediately ran into problems.

The first thing I ran into was that the .Net Core SDK doesn't get installed with Visual Studio 2015, mmmmkay. I installed that. Then the project won't build. Turns out there were some new packages I needed that didn't get included in my project.json, so I added those. Mind you this is the same project.json file that worked fine on my laptop. Then I spent several minutes figuring out how to get the `dotnet user-secrets` command working. This one was also a missing reference in my project.json. This also didn't work on the laptop although it must have at some point in the past, otherwise I would not have been able to add my secret keys to it.

I re-ran across the problem where if you are running the project with IIS Express and SSL in debugging mode, it won't work until you create the self-signed certificate. It doesn't throw an error or anything, the page just never loads. Using CTRL+F5 to start the project will get the pop-up you need to create the cert.

Finally, I ran across a bug where EF migrations can't deal with the boilerplate code created for use with Microsoft Identity. I had to go in and manually edit the migration code to give some fields maxlengths so that they could be used as indexes. Crazy.

So far my experience with .NET Core has just been one thing after another like this. The tooling is standing in the way of my coding. Honestly I'm not even sure why they released .NET Core 1.0 while the tooling was still officially in preview. I mean, the tooling is still in preview 3 months later and still seems to need some work.

I like the ideas behind .NET Core, but I'm thinking it has been a bit rushed. One of the things that really sets the Microsoft stack apart from others is how solid and cohesive it has been. I hope they can pull this shit together and get it shored up in the next few months.

Also, while I'm ranting about Microsoft products, let me just say that their sculpt keyboard and mouse combo is not great. You can check out my review at [this link](https://www.amazon.com/gp/customer-reviews/R207405EDO9X04?ref_=cm_cr_arp_d_rvw_ttl&ASIN=B00CYX53QW&pldnSite=1).

`</rant>`
]]></description>
        </item>
        <item>
            <title><![CDATA[MVCGrid.Net]]></title>
            <link>https://josephbales.com/blog/2016/12/12/free-grid-sorting-in-asp-net-mvc-5</link>
            <guid>https://josephbales.com/blog/2016/12/12/free-grid-sorting-in-asp-net-mvc-5</guid>
            <pubDate>Mon, 12 Dec 2016 06:00:00 GMT</pubDate>
            <description><![CDATA[
I didn't want an entire year to go by without writing a post, so I thought that I would talk a little bit about a neat little tool I found for displaying grid data in ASP.NET MVC 5 projects. It's called [MVCGrid.Net](http://mvcgrid.net/ "MVCGrid.Net"). I say "neat little tool," but it's actually quite powerful now that I know more about how to use it.

For styling it uses [Bootstrap](http://getbootstrap.com/ "Bootstrap") so that makes it easy for me since I already use Bootstrap for basic styling. It also includes a DLL where most of the magic happens and the configuration happens in a `MVCGridConfig.cs` file that you include in your `App_Start` folder.

It allows all kinds of automagic functionality like sorting, paging, filtering, and exporting. You can also allow customized fields and page sizes. A lot of this stuff is built in, but you can also write your own rendering engine and razor templates that will allow you to do whatever it is you want.

One page that might get overlooked in the documentation is the Custom Razor View page. It doesn't have a direct link on the documentation table of contents. It's actually buried in one of the other pages, but here's the [link](http://mvcgrid.net/demo/customrazorview "Link to Custom Razor Views").

The best thing is that it is free, open source (using the MIT license), and fairly well documented. Check it out if you are in need of something to help you get sortable grids up and running quickly in ASP.NET MVC 5.
]]></description>
        </item>
        <item>
            <title><![CDATA[Error converting data type DBTYPE_DBTIMESTAMP to datetime2]]></title>
            <link>https://josephbales.com/blog/2015/09/15/error-converting-data-type-dbtype_dbtimestamp-to-datetime2</link>
            <guid>https://josephbales.com/blog/2015/09/15/error-converting-data-type-dbtype_dbtimestamp-to-datetime2</guid>
            <pubDate>Tue, 15 Sep 2015 05:00:00 GMT</pubDate>
            <description><![CDATA[Okay, so here is a post that has been months in the making.

Lately I've been working on an <a href="https://en.wikipedia.org/wiki/Extract,_transform,_load" target="_blank">ETL</a> project, mostly the E and T parts. The project involves exporting data from a database via an <a href="https://en.wikipedia.org/wiki/Open_Database_Connectivity" target="_blank">ODBC</a> driver (<a href="http://supportline.microfocus.com/Documentation/AcucorpProducts/docs/v6_online_doc/acuodbc/acuodbct.htm" target="_blank">AcuODBC</a> to be exact). I don't have any control over the database being accessed other than being able to extract data and neither the client nor I have much knowledge of how the database actually works. For my part I just know that I can access it via the AcuODBC driver.

I am using .NET and C# to do the data extraction and translating, but I've run into an issue on several tables that has perplexed me for some time. It is the error message that I've used as the title of this post:

```Error converting data type DBTYPE_DBTIMESTAMP to datetime2.```

No matter how I was trying to get at the data, I kept getting this error. I tried <a href="https://msdn.microsoft.com/en-us/library/ms187928.aspx" target="_blank">CAST and CONVERT</a> SQL commands. I tried <a href="https://msdn.microsoft.com/en-us/library/ms162802.aspx" target="_blank">BCP</a>. I tried using <a href="https://msdn.microsoft.com/en-us/library/ms188029.aspx" target="_blank">SELECT INTO</a>. I tried <a href="https://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlbulkcopy(v=vs.110).aspx" target="_blank">SqlBulkCopy</a>. I finally got all the way down to using an <a href="https://msdn.microsoft.com/en-us/library/system.data.odbc.odbcdatareader(v=vs.110).aspx" target="_blank">OdbcDataReader</a> object to try to move the data, but I kept getting the error when I used `reader[index].ToString()` to access the data.

But then I noticed there was a method called <a href="https://msdn.microsoft.com/en-us/library/system.data.odbc.odbcdatareader.getstring(v=vs.110).aspx" target="_blank">GetString</a> in the OdbcDataReader object. I tried it and by golly it worked! (If you have been wondering what the cause of this error has been all along, it is an invalid date that was entered into the database with the year 0000). Yes, it worked, but it worked sloooooooow. Veeeeery slow. It was processing about 2 records per second, which isn't too bad until you scale that up to over 1.1 million records. The time to extract just that one table would be over 6 days! That would not do.

I sat on it for a few days and thought about all the potential solutions. I could bulk copy all the rows except the ones in question, but then I'd have to go through each table and find the culprit(s) and write special select statements to exclude those rows, then special select statements to grab those rows minus the offending fields. Then I'd have to update my table with the omitted records. Not something I really wanted to do.

Then today I noticed that when I used the `reader[index].ToString()` method to get the data, it came out at a much faster, more acceptable speed. Okay, so what if I wrap that in a try block and then in the catch block I use the slower GetString method? If that worked then only the offending data would get extracted using the slow GetString method and everything else would use the other method. And what do you know, it DID work! Here's the code for posterity (yeah, I'm stripping out all the new lines and spaces).

```csharp
while (reader.Read())
{
    string line = "";

    for (int i = 0; i < fCount; i++)
    {
        try
        {
            line = line + reader[i].ToString().Trim().Replace("\n", "").Replace("\r", " ") + "\t";
        }
        catch (Exception)
        {
            line = line + reader.GetString(i).Trim().Replace("\n", "").Replace("\r", " ") + "\t";
        }
    }
}
```
]]></description>
        </item>
        <item>
            <title><![CDATA[Setting up Apache Virtual Hosts on FreeBSD 10.1]]></title>
            <link>https://josephbales.com/blog/2015/04/03/setting-up-apache-virtual-hosts-on-freebsd-10-1</link>
            <guid>https://josephbales.com/blog/2015/04/03/setting-up-apache-virtual-hosts-on-freebsd-10-1</guid>
            <pubDate>Fri, 03 Apr 2015 05:00:00 GMT</pubDate>
            <description><![CDATA[I've been messing around on <a title="The DigitalOcean website" href="http://digitalocean.com" target="_blank">DigitalOcean</a> with a <a title="FreeBSD website" href="http://freebsd.org" target="_blank">FreeBSD</a> 10.1 droplet. First let me say that FreeBSD is awesome. The thing that I like the most about the BSDs is that they don't beat about the bush when it comes to making an OS because the purpose of each BSD <em>is</em> the OS. My main comparison is to Linux based OSes, which are awesome in their own way, but feel a bit splintered. With the BSDs it's not just a kernel with a bunch of GNU apps thrown at it to make it usable, they take great pains to produce a complete OS. So when I need to know how to do something on FreeBSD, there's probably already a darn good document out there with detailed instructions. Hell, you rarely have to go outside the FreeBSD manual unless you're doing something really complex. It just works and that's great!

Now on to why I'm writing this post. I was wanting to set up Apache on my FreeBSD 10.1 machine to serve up 3 different websites. In the Apache world this is called Virtual Hosts. So let us say that we have 3 different addresses, but only one IP, now what? Virtual Hosts, and specifically Named Virtual Hosts. Configuration is dead simple.

First, locate your httpd.conf file. The Apache configuration file has a lot of names on various different Linuxes, but on FreeBSD it's just httpd.conf and it is located at /usr/local/etc/apache24/httpd.conf. Open that file and go all the way to the bottom.

Second you will need to add in VirtualHost entries for each of your sites. You'll also need to include one for the default IP address of the machine, otherwise it will point to the first VirtualHost entry.

```xml
<VirtualHost *:80>
ServerName 127.0.0.1
DocumentRoot /usr/local/www/apache24/data
</VirtualHost>
```

```xml
<VirtualHost *:80>
ServerName example1.com
DocumentRoot /usr/local/www/apache24/data/example1.com
</VirtualHost>
```

```xml
<VirtualHost *:80>
ServerName example2.com
DocumentRoot /usr/local/www/apache24/data/example2.com
</VirtualHost>
```

The first line of each listing tells Apache that this is a VirtualHost entry and that it should listen to any incoming requests (the star) on port 80. The ServerName line tells Apache the name to look for for that particular entry. If a request comes in for example1.com, then the second entry above will be used. The first entry will be used if someone just types in the IP address of the server (assuming that 127.0.0.1 is the IP). The DocumentRoot line tells Apache where the files for that site are located. I tend to create a new folder for each site in the main document root folder so that all my sites are in a common place. The last line closes the listing.

Once you've edited your file, simply write it out and restart the Apache service to pick up the new settings.

```
sudo service apache24 restart
```

And it's that simple! For more detailed documentation on Virtual Hosts you should read the official <a title="Apache Virtual Hosts documentation link" href="http://httpd.apache.org/docs/2.4/vhosts/" target="_blank">Apache documentation</a>. Have fun with it!
]]></description>
        </item>
        <item>
            <title><![CDATA[The purpose of Twitter Bootstrap]]></title>
            <link>https://josephbales.com/blog/2014/12/08/the-purpose-of-twitter-bootstrap</link>
            <guid>https://josephbales.com/blog/2014/12/08/the-purpose-of-twitter-bootstrap</guid>
            <pubDate>Mon, 08 Dec 2014 06:00:00 GMT</pubDate>
            <description><![CDATA[Okay, so I rarely make websites or blog anymore. I'll admit that I've fallen a bit out of touch with regard to the latest and greatest web technologies. But I've surprised even myself in the amount of time it has taken for me to understand <a title="Twitter Bootstrap" href="http://getbootstrap.com" target="_blank">Bootstrap</a>.

In case you didn't know, Bootstrap is a web framework. No, I wouldn't go that far. It's more like a web layout framework. Bootstrap helps take your dowdy, old site and make it look like something a professional web designer might throw together in an afternoon (this is a compliment to web designers from someone who couldn't design their way out of a wet paper bag).

So the thing that has really eluded me when it comes to Bootstrap is the power. What power is this? What power could there possibly be in a glorified style sheet?

The power comes not from what Bootstrap does, it comes from what I don't have to do (and this is the part that took me so long to figure out). I don't have to write style sheets anymore. That's it.  But whoa, THAT'S IT! I used to spend HOURS (days even) tweaking this and nudging that, opening the <a title="The Gimp!" href="http://www.gimp.org/" target="_blank">Gimp</a> and doing a little on the fly editing, reading <a title="Pretentious" href="http://alistapart.com/" target="_blank">A List Apart</a> and <a title="Nerd cred quantified." href="http://stackoverflow.com/" target="_blank">Stack Overflow</a>.

Now when I build a site I vow to do as little of that crap as possible. Now I'm going to use Bootstrap for what it was intended: to leave the style to designers and let the blogger/developer blog and develop.
]]></description>
        </item>
        <item>
            <title><![CDATA[Why I'm no longer a Google fanboy]]></title>
            <link>https://josephbales.com/blog/2014/05/17/why-im-no-longer-a-google-fanboy</link>
            <guid>https://josephbales.com/blog/2014/05/17/why-im-no-longer-a-google-fanboy</guid>
            <pubDate>Sat, 17 May 2014 05:00:00 GMT</pubDate>
            <description><![CDATA[I used to be a Google fanboy (my wife is still a Google fangirl). I used to sing their praises and recommend their software and services to anyone who asked for the slightest computer advice. But lately I've been rethinking my stance on Google and have started moving in other directions.

So what did Google do that has put me off? They started sucking at what they used to do best. We've known all along that Google's products are NOT it's services, but it's users. Their massive user base and associated user data is where they make the big bucks. They amassed this data by tricking us users into giving it to them and the profit margins are astonishing because we give them all of that information without being compensated one red cent. It is not this fact that put me off. Quite the contrary, it is one hell of a business model. The thing that has put me off is that they aren't able to trick me into giving them my information for free anymore.

What do I mean by this? The way they tricked me in the past was to give me some pretty great software and services. The problem now is that I can't remember the last time they tricked me into using a new product. They have tons a new stuff coming out, but I'm not using it. Google+ is a flop and if the <a href="http://arstechnica.com/gadgets/2014/04/report-google-to-end-forced-g-integration-drastically-cut-division-resources/" target="_blank">rumors</a> are true they may finally be axing it. They killed the much loved Google Reader without even a reach around and that in turn has greatly reduced my blog readership (and writership for that matter). And the changes they are making in Android, Chrome, Apps, YouTube, and other services are more often than not making those services worse rather than better.

One thing I've noticed is that Google has become much more invasive and forceful in their efforts. In the past they were nice enough to allow us to customize their services and software and keep things the way we wanted them to be and allowed you to share content across multiple platforms. Now they are moving more towards the Apple approach where they are locking you into a certain ecosystem and locking you into the feature set they want you to have. They are changing things for the sake of their ecosystem and not for the reasons of customer feedback or improved feature sets.

My main issue lately is a growing distrust in their reliability. It really started with the aforementioned killing off of Reader. They had killed other services before Reader, but Reader was the first one that really affected me. I used to have a set of about 25 blogs that I read on a regular basis, but when Reader went, I couldn't find a good replacement that worked like I wanted it to work. So now I no longer read blogs. The outcry was great from the community of Reader users, but those cries were left unheard. Now I hear that cry in the back of my mind every time I use a Google service. I think, "When will Google become tired of this service and remove it?"

So I've decided to try to become much less reliant on Google services. I've already given up on Chrome and replaced it with Firefox. At some point I would like to replace my Android phone with a Windows phone, but that's probably a few years down the road (if Windows phone is still there). I now use Bing for most of my searching. The main services I use beyond that are Google Play for my music collection, Google Docs, Google Calendar, and Gmail. I'm not sure where I could put my music collection that is accessible as it is on Google Play, but there are multiple alternatives to Docs, Calendar, and Gmail and I am already exploring those. If you have any suggestions on replacements, feel free to contact me.

I don't want this blog to become Google bashing central and my intent is not to bash Google. As a company Google is no better or worse than any other large corporation. I'm simply stating what my issues with Google are and why I am personally trying to move in another direction. The simple fact is they just aren't capturing my enthusiasm anymore.
]]></description>
        </item>
        <item>
            <title><![CDATA[Deleting Your Google Apps for Your Domain Account]]></title>
            <link>https://josephbales.com/blog/2013/11/29/deleting-your-google-apps-for-your-domain-account</link>
            <guid>https://josephbales.com/blog/2013/11/29/deleting-your-google-apps-for-your-domain-account</guid>
            <pubDate>Fri, 29 Nov 2013 06:00:00 GMT</pubDate>
            <description><![CDATA[Okay, I spent about an hour trying to figure this out and finally did it. Google does not make deleting information easy because that information is their product. So the documentation about this particular subject is very sparse and ultimately I got what I needed from a obscure post in one of Google's product forums. I'm posting this here for posterity.

First let me start with how I ended up with a Google Apps account. Several years ago I was going on the road for a while and decided to manage my domain through <a href="http://wordpress.com" title="Wordpress" target="_blank">Wordpress.com</a>. One of the features that Wordpress offered was integration with Google Apps. I was a big fan of Gmail at the time, so I signed up so that I could manage my josephbales.com email addresses in Gmail.  I set up one address and forgot about it for 5 years.

Fast forward a few years.  I've decided that in light of recent events that Google isn't the coolest anymore. I'm still sticking with them for the moment, but I wanted to make sure I had full control of my own domain and email accounts and that none of that information was connected to a Google product.

When you search for instructions on how to delete your Google Apps account you get <a href="https://support.google.com/a/answer/1257646?hl=en" target="_blank">this url</a> as the first result in Google. These instructions are great for anyone who has been actively administering their Google Apps account.  However, if you set your Google Apps account up in 2007 and promptly forgot about it, a few things have changed and these instructions are worthless.

The real key is figuring out what the administrative user for the account is. If you just have one user, it may not be that user which was what was happening in my case. The admin user is admin@your-domain.com or possibly superuser@your-domain.com (where your-domain.com is your actual domain). The user "admin" worked for me.  Instead of signing in as my normal user, I signed in as admin and was able to follow the instructions for the search results I mentioned above. It might help to do this in Privacy Mode in whatever browser you happen to be using, just to make sure browser cookies are not accidentally logging you in as someone else.  Hope this helps all you people out there.
]]></description>
        </item>
        <item>
            <title><![CDATA[Web’s Dead, Baby: Part 2]]></title>
            <link>https://josephbales.com/blog/2013/06/12/webs-dead-baby-part-2</link>
            <guid>https://josephbales.com/blog/2013/06/12/webs-dead-baby-part-2</guid>
            <pubDate>Wed, 12 Jun 2013 05:00:00 GMT</pubDate>
            <description><![CDATA[Well, now that I've made you wait a couple of weeks to tell you why the Web is dead, I guess it's time to disappoint (nothing can live up to that amount of hype). As my one piece of evidence I present <a href="http://sachachua.com/blog/2013/05/how-to-learn-emacs-a-hand-drawn-one-pager-for-beginners/" target="_blank">this link</a>. Go ahead, look at it. I'll wait.

...

So, what did you think? If you were thinking, "What the hell is Emacs?" you missed the point. I wanted you to look at the design of the page. In fact, you can check out <a href="http://sachachua.com/blog/2013/05/how-to-make-a-hand-drawn-highlighted-web-page-header/" target="_blank">this link</a> to see the time and effort that went into that design.  I'll wait.. again.

...

Okay, you done? Good. What did you think? Don't answer, that was rhetorical (and people sitting near you will think you're crazy for talking at the computer). I'll tell you what I think. It's glorious. It's a fine piece of web design. That hand drawn look is very cool and the overall design is simple and easy to read.  The fonts are great and I really admire the thought, time, and artistry that went into creating it. Now look at this image (click or touch for a larger version):

<a href="/assets/sacha_chua_screenshot.png"><img src="/assets/sacha_chua_screenshot.png" alt="sacha_chua_screenshot" width="168" height="300" class="alignnone size-medium wp-image-1062" /></a>

This is how that website looks on a mobile browser. Specifically, that's how it looks on Chrome for Android on my Galaxy S3. So that great design, gone. The artistry, gone. Everything that made that sight design unique and interesting, gone.

"But Joey, the content is still there and surely that is what's most important." Yes, I know. Bear with me. It's not just the mobile browsers, it's the news aggregators that have been chipping away as well. Google Reader (now defunct), Feedly, whatever you want to use, they all strip the style of a site and just serve up the content. I'm old school and even though I've used Reader, even I have to admit that that it stripped away the context, the feel that the author intended to convey when they designed their site. Also, it makes it much easier to just go to your news aggregator and have things served up to you that you've previously subscribed to. Pretty soon, that's all you're looking at and the wider web is not within your walls.

Speaking of walls, here comes the real web killer. The thing that is making the web the long lost child that everyone has forgotten. Apps. APPS!!!! Apps are creating walled gardens of content. Instagram instantly comes to mind as an example. It's pretty much a mobile only experience (at first an iPhone only experience). Sure they've added some web content in the past few months, but it's just an afterthought, the only real way to see and interact fully is through an app.

Apps are putting up walls where the web had previously broke them down. Before the web, AOL, Prodigy, CompuServe, etc. all served up their own private content, and if you didn't subscribe, you didn't even have access to it. Apps are doing the same thing. To view and create content through certain services, you have to have their app. And some apps are iPhone only, or Android only, or only available on certain phone carriers. This isn't progression, it's regression. We are literally traveling back in time to the land of AOL and the private BBS.

Sure, the web is still around, and it will be for years and years to come, but it's dead. Like magma that has cooled and solidified, the web sits and awaits its fate. And the freedom and the openness of the web? They're slipping away too. The time when all you needed was a browser window to look into the vastness of all human intellect is fading into history. So when your grandkids ask you what the web was, you'll just tell them, "<a href="http://youtu.be/y7Yp2L6c2KM" target="_blank">The Web's dead, baby. The Web's dead.</a>"
]]></description>
        </item>
    </channel>
</rss>